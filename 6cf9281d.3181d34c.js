(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{111:function(e,t,n){"use strict";n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return b}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function m(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=a.a.createContext({}),s=function(e){var t=a.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},l=function(e){var t=s(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,p=m(e,["components","mdxType","originalType","parentName"]),l=s(n),d=r,b=l["".concat(i,".").concat(d)]||l[d]||h[d]||o;return n?a.a.createElement(b,c(c({ref:t},p),{},{components:n})):a.a.createElement(b,c({ref:t},p))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var c={};for(var m in t)hasOwnProperty.call(t,m)&&(c[m]=t[m]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var p=2;p<o;p++)i[p]=n[p];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},87:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return m})),n.d(t,"default",(function(){return s}));var r=n(2),a=n(6),o=(n(0),n(111)),i={title:"Using themes"},c={unversionedId:"packages/react/themes",id:"packages/react/themes",isDocsHomePage:!1,title:"Using themes",description:"Knowledge of themes is required.",source:"@site/docs/packages/react/themes.md",slug:"/packages/react/themes",permalink:"/docs/packages/react/themes",editUrl:"https://github.com/aesthetic-suite/website/edit/master/docs/packages/react/themes.md",version:"current",sidebar:"docs",previous:{title:"Getting started",permalink:"/docs/packages/react/setup"},next:{title:"Styling components",permalink:"/docs/packages/react/styles"}},m=[{value:"Changing themes",id:"changing-themes",children:[]},{value:"Contextual themeing",id:"contextual-themeing",children:[]},{value:"Accessing the theme",id:"accessing-the-theme",children:[]}],p={rightToc:m};function s(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Knowledge of ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/development/themes"}),"themes")," is required.")),Object(o.b)("p",null,"To provide the active theme to all React components, we'll need to render a ",Object(o.b)("inlineCode",{parentName:"p"},"ThemeProvider")," at the\nroot of your application. By default, the active theme will automatically be detected based on a\nuser's preference, like preferred color scheme, contrast levels, and more!"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-tsx",metastring:'title="index.ts" {3,8-10}',title:'"index.ts"',"{3,8-10}":!0}),"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from '@aesthetic/react';\nimport './setup';\nimport App from './App';\n\nReactDOM.render(\n  <ThemeProvider>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('app'),\n);\n")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Only 1 ",Object(o.b)("inlineCode",{parentName:"p"},"ThemeProvider")," may be rendered in an application.")),Object(o.b)("h2",{id:"changing-themes"},"Changing themes"),Object(o.b)("p",null,"As mentioned in the primary themes documentation, a theme can be changed with the ",Object(o.b)("inlineCode",{parentName:"p"},"changeTheme()"),"\nmethod. When called, this method will trigger a re-render on the root ",Object(o.b)("inlineCode",{parentName:"p"},"ThemeProvider"),"."),Object(o.b)("p",null,"However, there is a secondary approach for changing themes, and that is through the ",Object(o.b)("inlineCode",{parentName:"p"},"name")," prop.\nThis approach is a bit cumbersome, as it requires re-rendering the provider near the root of the\napplication, which requires some form of state at that layer."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-tsx"}),"import { ThemeProvider } from '@aesthetic/react';\n\n<ThemeProvider name=\"twilight\">\n  <App />\n</ThemeProvider>;\n")),Object(o.b)("h2",{id:"contextual-themeing"},"Contextual themeing"),Object(o.b)("p",null,"A root ",Object(o.b)("inlineCode",{parentName:"p"},"ThemeProvider")," provides design tokens to the entire application by declaring ",Object(o.b)("inlineCode",{parentName:"p"},":root")," level\nCSS variables and applying a ",Object(o.b)("inlineCode",{parentName:"p"},"<body />")," class name. Because of this architectural decision, themes\nand styles can be dynamically changed with ease."),Object(o.b)("p",null,"Because we utilize CSS variables, we implicitly support nested themes by taking advantage of\nelement-level CSS variable cascading. To integrate nested themes, use the ",Object(o.b)("inlineCode",{parentName:"p"},"ContextualThemeProvider"),"\nwith an explicit theme name."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-tsx"}),'import { ThemeProvider, ContextualThemeProvider } from \'@aesthetic/react\';\n\n<ThemeProvider name="day">\n  <div>Inherits styles from the day theme.</div>\n\n  <ContextualThemeProvider name="night">\n    <div>Inherits styles from the night theme.</div>\n  </ContextualThemeProvider>\n</ThemeProvider>;\n')),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},Object(o.b)("inlineCode",{parentName:"p"},"ContextualThemeProvider"),"s can be infinitely nested, but not recommended.")),Object(o.b)("h2",{id:"accessing-the-theme"},"Accessing the theme"),Object(o.b)("p",null,"To manually access the provided ",Object(o.b)("inlineCode",{parentName:"p"},"Theme")," object, either from the root or contextually, use the\n",Object(o.b)("inlineCode",{parentName:"p"},"useTheme()")," hook."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-tsx",metastring:"{4,6}","{4,6}":!0}),"import { useTheme } from '@aesthetic/react';\n\nexport default function Component() {\n  const theme = useTheme();\n\n  if (theme.scheme === 'dark') {\n    // Do something\n  }\n\n  return <div />;\n}\n")),Object(o.b)("p",null,"Or use the ",Object(o.b)("inlineCode",{parentName:"p"},"withTheme()")," HOC, which passes the theme as a ",Object(o.b)("inlineCode",{parentName:"p"},"theme")," prop."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-tsx",metastring:"{3,4,11}","{3,4,11}":!0}),"import { withTheme, WithThemeWrappedProps } from '@aesthetic/react';\n\nfunction Component({ theme }: WithThemeWrappedProps) {\n  if (theme.contrast === 'high') {\n    // Do something\n  }\n\n  return <div />;\n}\n\nexport default withTheme()(Component);\n")))}s.isMDXComponent=!0}}]);