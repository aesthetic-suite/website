(self.webpackChunkaesthetic_website=self.webpackChunkaesthetic_website||[]).push([[4229],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),c=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,y=d["".concat(i,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(y,s(s({ref:t},p),{},{components:n})):r.createElement(y,s({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=d;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:a,s[1]=l;for(var c=2;c<o;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9190:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return l},metadata:function(){return i},toc:function(){return c},default:function(){return u}});var r=n(2122),a=n(9756),o=(n(7294),n(3905)),s=["components"],l={title:"Styled components"},i={unversionedId:"react/styled",id:"react/styled",isDocsHomePage:!1,title:"Styled components",description:"An alternative to styling components manually is to use the createStyled() API,",source:"@site/docs/react/styled.md",sourceDirName:"react",slug:"/react/styled",permalink:"/docs/react/styled",editUrl:"https://github.com/aesthetic-suite/website/edit/master/docs/react/styled.md",version:"current",frontMatter:{title:"Styled components"},sidebar:"react",previous:{title:"Styling components",permalink:"/docs/react/styles"},next:{title:"Directionality",permalink:"/docs/react/direction"}},c=[{value:"Variant styles",id:"variant-styles",children:[]},{value:"Composing components",id:"composing-components",children:[]}],p={toc:c};function u(e){var t=e.components,n=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"An alternative to ",(0,o.kt)("a",{parentName:"p",href:"/docs/react/styles"},"styling components")," manually is to use the ",(0,o.kt)("inlineCode",{parentName:"p"},"createStyled()")," API,\nwhich creates a reusable component at the lowest level -- per element. This approach was made\npopular by the ",(0,o.kt)("a",{parentName:"p",href:"https://styled-components.com"},"styled-components")," library."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"createStyled()")," (or ",(0,o.kt)("inlineCode",{parentName:"p"},"styled")," alias) function requires the name of an HTML element to render\nunderneath the hood. Using the example below, it would render a ",(0,o.kt)("inlineCode",{parentName:"p"},"<button />"),". It also requires a\npartial ",(0,o.kt)("a",{parentName:"p",href:"/docs/dev/css-in-js/style-sheets/components"},"style sheet")," (either an object or function),\nin which a single element is styled, instead of multiple elements."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import React from 'react';\nimport { createStyled } from '@aesthetic/react';\n\nconst Button = createStyled('button', (css) =>\n    css.mixin('reset-button', {\n        display: 'inline-flex',\n        padding: css.var('spacing-df'),\n        textAlign: 'center',\n    }),\n);\n\nexport default Button;\n")),(0,o.kt)("p",null,"Because this API is based on existing HTML elements, all props for that specific element are\nautomatically supported and are typed correctly if using TypeScript."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'<Button type="submit" disabled={disabled} onClick={onClick}>\n    Save\n</Button>\n')),(0,o.kt)("h2",{id:"variant-styles"},"Variant styles"),(0,o.kt)("p",null,"Styled components can support any number of customizable variations out of the box."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"const Button = styled('button', {\n    display: 'inline-flex',\n    padding: css.var('spacing-df'),\n    textAlign: 'center',\n\n    '@variants': {\n        'size:sm': { fontSize: css.var('text-sm-size') },\n        'size:df': { fontSize: css.var('text-df-size') },\n        'size:lg': { fontSize: css.var('text-lg-size') },\n\n        'palette:brand': { backgroundColor: css.var('palette-brand-bg-base') },\n        'palette:positive': { backgroundColor: css.var('palette-positive-bg-base') },\n        'palette:warning': { backgroundColor: css.var('palette-warning-bg-base') },\n    },\n});\n\n// Set default props to define default variants\nButton.defaultProps = {\n    palette: 'brand',\n};\n")),(0,o.kt)("p",null,"You can then enable a variant by passing a prop with the name of a variant, and a value of one of\nits types."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'<Button palette="brand" size="lg">\n    Large branded button\n</Button>\n')),(0,o.kt)("p",null,"If using TypeScript, you'll need to type the variant props manually using the 2nd generic."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"interface ButtonVariants {\n    size?: 'sm' | 'df' | 'lg';\n    palette?: 'brand' | 'positive' | 'warning';\n}\n\nconst Button = styled<'button', ButtonVariants>('button', {\n    // ...\n});\n")),(0,o.kt)("h2",{id:"composing-components"},"Composing components"),(0,o.kt)("p",null,"Styled components can also extend and compose around other styled components. When using this\napproach, all styles and their variants are inherited."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"const Button = styled('button', (css) => ({\n    display: 'inline-flex',\n    textAlign: 'center',\n    padding: css.var('spacing-df'),\n}));\n\nconst BlockButton = styled(Button, {\n    display: 'flex',\n    width: '100%',\n});\n\nconst PillBlockButton = styled(BlockButton, {\n    borderRadius: '50%',\n});\n")))}u.isMDXComponent=!0}}]);